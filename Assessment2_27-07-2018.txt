Name: Sai Abhishikth
Assessment 2

Question 1:
Exercise 1.1:  

Problem Statement:
Develop a calculator  application to perform addition, subtraction, multiply and divide two number based on the choice 1 add 2 sub 3 mul 4 div   without using any control statement like if, else if, case

1)	Create an abstract class Arithmetic with has 2 instance variable num1, num2, num3. Methods to read, and display with the constructor to initialize. Abstract method calculate
2)	Create sub class for addition, subtraction, multiplication and divide and override calculate method.
3)	Create a array of reference for arithmetic class and initialize object of sub call (addition, subtraction, multiplication and division) 
4)	Read two numbers and choice perform the calculation base on choice without using control statement.


Ans:

package Question1;

abstract public class Arithmetic  // Abstract class containing required methods which will later be overriden
{ int num1, num2, num3;
public Arithmetic()
{
	num1=0;
	num2=0;
	num3=0;
}
void read(int num1,int num2,int num3)
{
calculate(num1,num2,num3);
}
void calculate(int num1, int num2, int num3)
{	

}
void display(int result)
{
System.out.println(result);
}

}

package Question1;

public class Calculator extends Arithmetic
{
	void read(int num1, int num2, int num3) // Method to read input numbers
	{
		calculate(num1, num2, num3);
	}

	void calculate(int num1, int num2, int num3) // Method to calculate the answer depending on the user's input
	{   
		try 
		{
		
			int arr[] =new int[] {num1+num2,num1-num2,num1*num2,num1/num2};
			display(arr[num3-1]);
	    
		} 
		catch(ArithmeticException ae)
		{
			System.out.println("Divide by zero exception");
		}
	}
	void display(int result) // Method to display the result
	{
		System.out.println(result); 
	}
}


package Question1;

import java.util.Scanner;

public class Main {

	public static void main(String[] args) 
	{
		System.out.println("Please enter the two numbers");
		Scanner sc = new Scanner(System.in);
		int num1 =sc.nextInt();
		int num2 = sc.nextInt();
		System.out.println("For addition press 1, for subtraction press 2," 
				             + "for multiplication press 3, for division press 4");
		int num3 = sc.nextInt();
		Arithmetic arithmetic = new Calculator();
		arithmetic.read(num1,num2,num3);
	}

}




Question 2:

Exercise 1.2:  

Problem Statement:
Develop java application to compute income tax of employee based on annual income.

Create class EmplyeeVo which contain instance variable empid, empname, annualincome, incometax. Create setter and getter methods 

Override the following methods:
1)	 toString method which returns all the employee details.
2)	Hashcode method to return the hashcode of the data
3)	Equals method to compare the object
4)	Add the parameter constructor to add data

 Create class EmplyeeBo which contains instance method calincomeTax (), return type is void, argument is EmplyeeVo. Take the annualincome for emplyeeVo and compute income tax and store it back to emplyeeVo.

Create class Emplyeesort implement comparator interface and override compareTo method do sort the data on incometax in descending order.
Create an EmplyeeMain with main method and do the following
1)	Accept no of employees
2)	Create an array of EmplyeeVo based on number of employees
3)	Read empid, empname, annualincome and calculate income tax calling calincomeTax method of EmplyeeBo object.
4)	Display the data of the all the employee
5)	Sort the data of the employee based on income tax and re print.


Ans:

package Day10;

public class EmplyeeVo {
//instance variables w
private int empid;
private String empname;
private double annualincome;
private double incometax;


public int getEmpid() {
return empid;
}
public void setEmpid(int empid) {
this.empid = empid;
}
public String getEmpname() {
return empname;
}
public void setEmpname(String empname) {
this.empname = empname;
}
public double getAnnualincome() {
return annualincome;
}
public void setAnnualincome(double annualincome) {
this.annualincome = annualincome;
}
public double getIncometax() {
return incometax;
}
public void setIncometax(double incometax) {
this.incometax = incometax;
}
@Override
public int hashCode() {
final int prime = 31;
int result = 1;
long temp;
temp = Double.doubleToLongBits(annualincome);
result = prime * result + (int) (temp ^ (temp >>> 32));
result = prime * result + empid;
result = prime * result + ((empname == null) ? 0 : empname.hashCode());
temp = Double.doubleToLongBits(incometax);
result = prime * result + (int) (temp ^ (temp >>> 32));
return result;
}
@Override
public boolean equals(Object obj) {
if (this == obj)
return true;
if (obj == null)
return false;
if (getClass() != obj.getClass())
return false;
EmplyeeVo other = (EmplyeeVo) obj;
if (Double.doubleToLongBits(annualincome) != Double.doubleToLongBits(other.annualincome))
return false;
if (empid != other.empid)
return false;
if (empname == null) {
if (other.empname != null)
return false;
} else if (!empname.equals(other.empname))
return false;
if (Double.doubleToLongBits(incometax) != Double.doubleToLongBits(other.incometax))
return false;
return true;
}
public EmplyeeVo(int empid, String empname, double annualincome, double incometax) {
super();
this.empid = empid;
this.empname = empname;
this.annualincome = annualincome;
this.incometax = incometax;
}


}



package Day10;

public class EmplyeeBo {
public static void calincomeTax(EmplyeeVo e)
{
double income = e.getAnnualincome();


if(income<=250000)
{
e.setIncometax(0);
}
else if(income>250000 && income<=500000)
{

e.setIncometax(0.05*income);
}
else if(income>500000 && income<=1000000)
{
e.setIncometax(0.2*income);

}
else
{
e.setIncometax(0.3*income);
}


}
}


package Day10;

import java.util.Scanner;

import Day6.Arraydemo;

public class EmplyeeMain  {

public static void main(String[] args) {

Scanner sc = new Scanner(System.in);
System.out.println("enter the number of employees");
int noe = sc.nextInt(); //number of employees

EmplyeeVo [] e = new EmplyeeVo[noe];
for(int i=0;i<e.length;i++)
{
e[i]= new EmplyeeVo(i, null, i, i);
}

EmplyeeVo f = new EmplyeeVo(noe, null, noe, noe);


for (int i = 0; i <e.length; i++) {
System.out.println("enter employee id of employee "+(i+1));
int t = sc.nextInt();
e[i].setEmpid(t);
System.out.println("enter employee name of employee "+(i+1));
e[i].setEmpname(sc.next());
System.out.println("enter employee annual income of employee "+(i+1));
e[i].setAnnualincome(sc.nextDouble());

EmplyeeBo.calincomeTax(e[i]);
System.out.println("all the data of employee"+(i+1)+"are entered");

}

for (int i = 0; i < e.length; i++) {
System.out.println("employee id of employee " +(i+1)+"is "+e[i].getEmpid());
System.out.println("employee name of employee " +(i+1)+"is "+e[i].getEmpname());
System.out.println("annual income of employee " +(i+1)+"is "+e[i].getAnnualincome());
System.out.println("income tax of employee " +(i+1)+"is "+e[i].getIncometax());
}

for (int  i= 0; i < e.length; i++) {
for (int j = i+1; j < e.length; j++) {
if(e[i].getIncometax()<e[j].getIncometax())
{
f  = e[i];
e[i]=e[j];
e[j]=f;
}
}

}
System.out.println("the sorted array is ");
for (int i = 0; i < e.length; i++) {
System.out.println("employee id of employee " +(i+1)+"is "+e[i].getEmpid());
System.out.println("employee name of employee " +(i+1)+"is "+e[i].getEmpname());
System.out.println("annual income of employee " +(i+1)+"is "+e[i].getAnnualincome());
System.out.println("income tax of employee " +(i+1)+"is "+e[i].getIncometax());
}





}

}


Question 3:
Exercise 1.3:  
 
Given an integer array, Write a program to find if the array has any triplets. A triplet is a value if it appears 3 consecutive times in the array.

Include a class UserMainCode with a static method checkTripplets which accepts an integer array. The return type is boolean stating whether its a triplet or not.

Create a Class Main which would be used to accept the input arrayand call the static method present in UserMainCode.

Input and Output Format:

Input consists of n+1 integers. The first integer would represent the size of array and the next n integers would have the values.

Output consists of a string stating TRUE or FALSE.

Refer sample output for formatting specifications.

Sample Input 1:
7
3
3
5
5
5
2
3

Sample Output 1:
TRUE

Sample Input 2:
7
5
3
5
1
5
2
3
Sample Output 2:
FALSE

Ans:

package Question3;

class UserMainCode
{
 	static boolean checkTripplets(int[] a) // Method to check whether 3 consecutive elements of an array are equal 
 	{
 	
 		int i=0;
       		int l =a.length;
       		for(i=0;i<l;++i)
       		{
       		   if(i==(l-2))
       		   break;
       		   if((a[i]==a[i+1])&&(a[i]==a[i+2]))
       		   return true;
       	
      		}
 		return false;
 	}
}


package Question3;
import java.util.Scanner;

public class Main 
{
	public static void main(String[] args) 
	{
		System.out.println("Please enter array length");
		Scanner sc = new Scanner(System.in);
		String s="null";
		int l=sc.nextInt();
		int[] a = new int[l];
		System.out.println("Please enter array elements");
		for(int i=0;i<l;++i)
		{
		   a[i]=sc.nextInt();
		}
		if(UserMainCode.checkTripplets(a))
		{
		    s="TRUE";
		}	
		else
		{
	            s="FALSE";
		}
		System.out.println(s);
	}
}
